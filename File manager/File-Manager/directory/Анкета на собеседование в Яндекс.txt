Опишите словами алгоритм решения задачи

Ввод: натуральное число n
Вывод: количество простых чисел строго меньше n

Решение должно быть вычислительно-эффективным


BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
int n = Integer.parseInt(reader.readLine());
for(int i = 0; i < n; i++) {
System.out.println(i);
}

Опишите алгоритм разбиения массива длины N на k подмассивов так, чтобы размер самого длинного и самого короткого подмассива отличалась не больше чем на 1
Чему будут равны длины подмассивов?
Может ли k быть больше длины N?

Выявим количество элементов подмассивов, которые нам необходимо записать в каждый подмассив:
if(N < k) {
Error
}

if(N % k == 0) {
кол-во элементов подмассивов будет N/k т.е. равным
}
else {
кол-во элементов подмассивов будет N/k
через цикл for дозаписываем элементы массива в кол-ве N%k в каждый подмассив 
}
Пример решения
https://github.com/Gadgi95/git_basics/blob/main/Splitting%20an%20array%20into%20subarrays/src/Main.java

	
Дан массив неповторяющихся чисел, который был отсортирован, а затем циклически сдвинут на неизвестное число позиций.
Опишите без кода и псевдокода алгоритм поиска максимума в таком массиве
Оцените сложность предложенного алгоритма
Изменится ли сложность если массив содержит повторяющиеся числа?

Метод перебора чисел. 
Записываем первое число как максимальное, сравниваем со следующими. Если находится число больше, перезаписываем максимум.